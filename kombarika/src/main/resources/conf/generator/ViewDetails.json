{
    "views":{
        "ajax":{
            "inputInsert":"<div class=\"mb-3\"> \n \t<label class=\"form-label\">#label#</label> \n \t<input class=\"form-control\" type=\"#type#\" name=\"#name#\" >\n</div>",
            "inputUpdate":"<div class=\"mb-3\"> \n \t<label class=\"form-label\">#label#</label> \n \t<input class=\"form-control\" type=\"#type#\" name=\"#name#\" value=\"`+data[i][\"#name#\"]+`\">\n</div>",
            "select":"<div  class=\"mb-3\"> \n \t<label class=\"form-label\">#label#</label> \n \t<select class=\"form-control\" name=\"#name#\" id=\"select-#name#\">\n#option#\n\t</select>\n</div>",
            "selectUpdate":"<div class=\"mb-3\"> \n \t<label class=\"form-label\">#label#</label> \n \t<select class=\"form-control\" name=\"#name#\" id=\"select-#name#-`+data[i][\"#id#\"]+`\"></select>\n</div>",
            "option":"<script>\n$.ajax({\n\turl: '#url#/#path#',\n\ttype: 'GET',\n\tsuccess: function(data) {\n\t\tvar keys = Object.keys(data[0]);\n\t\tvar select = $(\"#select-#label#\");\n\t\tfor (let i = 0; i < data.length; i++) { \n\t\t\tvar option = `<option value=`+data[i][\"#id#\"]+`>`+data[i][\"#attibute#\"]+`</option>`;\n\t\t\tselect.append(option);\n\t\t}\n\t}\n})\n</script>",
            "optionUpdate":"$.ajax({\n\turl: '#url#/#path#',\n\ttype: 'GET',\n\tsuccess: function(data#Name#) {\n\t\tvar keys = Object.keys(data#Name#[0]);\n\t\tvar select = $(\"#select-#label#-\"+data[i][\"#id#\"]);\n\t\tfor (let j = 0; j < data#Name#.length; j++) { \n\t\t\tvar option = `<option value=`+data#Name#[j][\"#id#\"]+`>`+data#Name#[j][\"#attribute#\"]+`</option>`;\n\t\t\tselect.append(option);\n\t\t}\n\t}\n});",
            "tableHeader":"\t<th> #label# </th>",
            "template":"html/ViewTemplate.txt",
            "extension":"html",
            "serviceTemplate":"",
            "serviceFileName":"",
            "serviceFileExtension":"",
            "componentTemplate":"",
            "componentFileExtension":"",
            "componentFileName":"",
            "routeTemplate":"",
            "routeFilename":"",
            "routeFileExtension":"",
            "routeSyntax":"",
            "routeImportSyntax":"",
            "handleInputChange":"",
            "handleSelectChange":"",
            "values":"",
            "tableValue":"\t\ttr.append('<td>' + data[i].#value# + '</td>');",
            "fetch":"",
            "handleSelectItem":"",
            "listMapping" : {
                "Timestamp":"date-time local",
                "Time":"time",
                "Date":"Date",
                "Integer":"number",
                "Double":"number",
                "Float":"number",
                "Boolean":"text",
                "String":"text",
                "Char":"text",
                "BigDecimal":"number",
                "BigInt":"number",
                "[B":"file"
            }
        },
        "react":{
            "CLIGenerator":"cd #path# && mkdir #projectName# && cd #projectName# && npx create-react-app",
            "inputInsert":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<input className=\"form-control\" type=\"#type#\" name=\"#name#\" />\n</div>",
            "inputUpdate":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<input className=\"form-control\" type=\"#type#\" name=\"#name#\" onChange={handleInput#Name#Change} value={selectedItem ? selectedItem.#name#:''} />\n</div>",
            "select":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<select className=\"form-control\" name=\"#name#\" id=\"select-#name#\">\n#option#\n\t</select>\n</div>",
            "selectUpdate":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<select className=\"form-control\" name=\"#name#\">\n\t#optionUpdate#\n</select>\n</div>",
            "option":"{#path#.map((elt) => (\n\t<option value={elt.#id#}>{elt.#attribute#}</option>\n))}\n",
            "optionUpdate":"{#path#.map((elt) => (\n\t<option value={elt.#id#}>{elt.#attribute#}</option>\n))}\n",
            "tableHeader":"\t<th> #label# </th>",
            "template":"react/ReactTemplate.txt",
            "extension":"jsx",
            "serviceTemplate":"",
            "serviceFileName":"",
            "serviceFileExtension":"",
            "componentTemplate":"",
            "componentFileExtension":"",
            "componentFileName":"",
            "routeTemplate":"react/RoutesTemplate.txt",
            "routeFilename":"App",
            "routeFileExtension":"js",
            "routeSyntax":"\t\t\t\t<Route path=\"/#path#\" element={<#element# />} />",
            "routeImportSyntax":"import #element# from \"./components/#path#/#element#\";",
            "handleInputChange":"const handleInput#Name#Change = (event) => {\n\tsetSelectedItem({ ...selectedItem, #name#: event.target.value });\n};\n",
            "handleSelectChange":"const handleSelect#Name#Change = (event) => {\n\tsetSelectedItem({ ...selectedItem, #name#: event.target.value });\n};\n",
            "values":"const [#entity#, set#Entity#] = useState([]);\n",
            "tableValue":"<td>{item.#values#}</td>",
            "fetch":"useEffect(() => {\n\tconst get#Entity# = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(url + '#entity#');\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error('Network response was not ok');\n\t\t\t\t};\n\t\t\tconst data = await response.json();\n\t\t\tset#Entity#(data);\n\t\t} catch (error) {\n\t\t\tsetError(error);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\tget#Entity#();\n}, []);\n",
            "handleSelectItem":"const handleSelectItem = (itemKey) => {\n\thandleShofetchw2();\n\tconst itemDetails = district.find(item => item.id === itemKeyfetch);\n\tsetSelectedItem(itemDetails);\n};\n",
            "listMapping" : {
                "Timestamp":"date-time local",
                "Time":"time",
                "Date":"Date",
                "Integer":"number",
                "Double":"number",
                "Float":"number",
                "Boolean":"text",
                "String":"text",
                "Char":"text",
                "BigDecimal":"number",
                "BigInt":"number",
                "[B":"file"
            }
        },
        "vue": {
            "CLIGenerator":"cd #path# && mkdir #projectName# && cd #projectName# && npx create-react-app",
            "inputInsert":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<input className=\"form-control\" type=\"#type#\" name=\"#name#\" />\n</div>",
            "inputUpdate":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<input className=\"form-control\" type=\"#type#\" name=\"#name#\" />\n</div>",
            "select":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<select className=\"form-control\" name=\"#name#\" id=\"select-#name#\">\n#option#\n\t</select>\n</div>",
            "selectUpdate":"<div className=\"mb-3\"> \n \t<label className=\"form-label\">#label#</label> \n \t<select className=\"form-control\" name=\"#name#\">\n\t#optionUpdate#\n</select>\n</div>",
            "option":"<option v-for='elt in #path#' :key='elt.#id#' :value='elt.#id#'>{{elt.#attribute#}}</option>\n\n",
            "optionUpdate":"<option v-for='elt in #path#' :key='elt.#id#' :value='elt.#id#'>{{elt.#attribute#}}</option>\n\n",
            "tableHeader":"\t<th> #label# </th>",
            "template":"vue/VueTemplate.txt",
            "extension":"vue",
            "serviceTemplate":"vue/AppTemplate.txt",
            "serviceFileName":"App",
            "serviceFileExtension":"vue",
            "componentTemplate":"vue/MainTemplate.txt",
            "componentFileExtension":"main",
            "componentFileName":"js",
            "routeTemplate":"vue/RoutesTemplate.txt",
            "routeFilename":"route",
            "routeFileExtension":"js",
            "routeSyntax":"{\n\t path: '/#path#', \n\t component: #element# \n },",
            "routeImportSyntax":"import #element# from \"./components/#path#/#element#.vue\";",
            "handleInputChange":"",
            "handleSelectChange":"",
            "values":"#entity#: null,\n",
            "tableValue":"<td>{{item.#values#}}</td>",
            "fetch":"fetch(this.url + '#entity#') \n .then(response => response.json()) \n.then(data => { this.#entity# = data; }) \n .catch(error => alert(error)); \n",
            "handleSelectItem":"",
            "listMapping" : {
                "Timestamp":"date-time local",
                "Time":"time",
                "Date":"Date",
                "Integer":"number",
                "Double":"number",
                "Float":"number",
                "Boolean":"text",
                "String":"text",
                "Char":"text",
                "BigDecimal":"number",
                "BigInt":"number",
                "[B":"file"
            }
        }
    }
}